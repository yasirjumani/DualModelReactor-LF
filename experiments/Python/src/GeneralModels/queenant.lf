/** Model of reactors with one lead */
target Python

preamble {=  =}

### Ant
reactor Ant {
  timer t(0, 100 msec)
  state _standing = 0

  input in0

  output out0

  reaction(startup) -> out0 {=
    if self._standing == 0:
      out0.set(self._standing)
    self._standing += 1
  =}

  reaction(t) -> out0 {=
    out0.set("Replace")
  =}

  reaction(in0) {=
    if in0.is_present:
      print("Input 0 is present.")
  =}
}

reactor Queen {
  state _holding

  input in0
  input in1
  input in2
  input in3
  input in4

  output out0
  output out1
  output out2
  output out3
  output out4

  reaction(in0, in1, in2, in3, in4) -> out0, out1, out2, out3, out4 {=
    if in0.is_present:
      print("Input 0 is present")
    if in1.is_present:
      print("Input 1 is present")
    if in2.is_present:
      print("Input 2 is present")
    if in3.is_present:
      print("Input 3 is present")
    if in4.is_present:
      print("Input 4 is present")
    out0.set("Replace")
    out1.set("Replace")
    out2.set("Replace")
    out3.set("Replace")
    out4.set("Replace")
  =}
}

main reactor {
  ants = new[5] Ant()
  queen = new Queen()

  queen.out0, queen.out1, queen.out2, queen.out3, queen.out4 -> ants.in0

  ants.out0 -> queen.in0, queen.in1, queen.in2, queen.in3, queen.in4
}
