// src/Receiver.lf
target CCpp {
  cmake-include: "include/composition.cmake"
}

preamble {=
  #include "subscriber_member_function.h"
=}

reactor Receiver {
  // Instantiate the subscriber node as a sate variable
  state subscriber_node: std::shared_ptr<MinimalSubscriber>
  input in: std::shared_ptr<std_msgs::msg::String>

  reaction(startup) {=
    // Initialize rclcpp
    rclcpp::init(0, NULL);
    // Instantiate the ROS node
    self->subscriber_node = std::make_shared<MinimalSubscriber>();
  =}

  reaction(in) {=
    lf_print("[LF receiver] Received %s", in->value->data.c_str());
    self->subscriber_node->topic_callback(in->value);
  =}

  reaction(shutdown) {=
    rclcpp::shutdown();
  =}
}
