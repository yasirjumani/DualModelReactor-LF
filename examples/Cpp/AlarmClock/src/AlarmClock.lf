/**
 * This is a minimal example of an alarm clock implemeted using the features Lingua Franca supplies.
 *
 * This is just an extract and simplification from the main project which you can find here:
 * https://github.com/revol-xut/lf-alarm-clock
 *
 * This file contains the networking implementation it is really just an simple socket application
 * which parses simple HTTP headers and responds in text/plain
 *
 * @author Tassilo Tanneberer <tassilo.tanneberger@tu-dresden.de>
 */
target Cpp {
  cmake-include: "AlarmClock.cmake"
}

import Network from "./Network.lf"
import Clock from "./Clock.lf"

main reactor AlarmClock {
  clock = new Clock()
  network = new Network()

  network.event -> clock.event  // addition of a new event
  network.delete_index -> clock.cancel_by_index
  clock.event_dump -> network.updated_events

  reaction(startup) {=
    std::cout << "Starting Lingua Franca AlarmClock" << std::endl;
  =}
}
