target C

/**
 * Compute Fibonacci numbers until at least the specified physical time has passed. This will
 * compute numbers until they overflow the 64-bit representation, and then start over. When at least
 * the specified physical time has elapased, report the last number computed. This is used in some
 * design patterns to provide significant computation.
 *
 * @param approximate_time The approximate amount of physical time to take for each input.
 *
 * @input in A triggering input.
 *
 * @output out The computed Fibonacci number.
 */
reactor TakeTime(approximate_time: time = 100 msec) {
  input in: int
  output out: int

  reaction(in) -> out {=
    instant_t start_time = lf_time_physical();
    int f0 = 0;
    int f1 = 1;
    int count = 0;
    while (lf_time_physical() < start_time + self->approximate_time) {
      int next_term = f0 + f1;
      if (next_term < 0LL) {
        // Overflow has occurred. Start over.
        count = 0;
        f0 = 0;
        f1 = 1;
      } else {
        f0 = f1;
        f1 = next_term;
        count++;
      }
    }
    lf_set(out, f1);
    lf_print("The %d-th Fibonacci number is %d.", count, f0);
  =}
}
